#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zmk,kscan = &kscan0;
		zmk,matrix_transform = &default_transform;
    };

    default_transform: keymap_transform_0 {
		compatible = "zmk,matrix-transform";
		columns = <6>;
		rows = <6>;
    // | SW6  | SW5  | SW4  | SW3  | SW2  | SW1  | SW2  | SW3  | SW4  | SW5  | SW6  |
    // | SW12 | SW11 | SW10 | SW9  | SW8  | SW7  | SW8  | SW9  | SW10 | SW11 | SW12 |
    // | SW18 | SW17 | SW16 | SW15 | SW14 | SW13 | SW14 | SW15 | SW16 | SW17 | SW18 |
    //                      | SW29 | SW28 | SW27 | SW27 | SW28 | SW29 |
		map = <
    RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(4,0) RC(4,1) RC(4,2) RC(4,3) 
    RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(4,4) RC(4,5) RC(5,1) RC(5,2)
    RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(5,3) RC(5,4) RC(5,5) RC(5,0)
                    RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,0) RC(3,1) 
		>;
	};

  kscan0: kscan {
      compatible = "zmk,kscan-gpio-matrix";
      label = "KSCAN";

      diode-direction = "col2row";
      row-gpios
          = <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
          , <&pro_micro 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
          , <&pro_micro 19 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
          , <&pro_micro 18 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
          , <&pro_micro 0  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
          , <&pro_micro 1  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
          ;
      col-gpios
          = <&pro_micro 10 GPIO_ACTIVE_HIGH>
          , <&pro_micro 9 GPIO_ACTIVE_HIGH>
          , <&pro_micro 8 GPIO_ACTIVE_HIGH>
          , <&pro_micro 7 GPIO_ACTIVE_HIGH>
          , <&pro_micro 6 GPIO_ACTIVE_HIGH>
          , <&pro_micro 5 GPIO_ACTIVE_HIGH>
          ;


    };
};


&spi0  {
    status = "okay";
    cs-gpios = <&pro_micro 3 GPIO_ACTIVE_LOW>;

    glidepoint: glidepoint@0 {
        compatible = "cirque,pinnacle";
        reg = <0>;
        spi-max-frequency = <1000000>;
        status = "okay";
        dr-gpios = <&pro_micro 4 (GPIO_ACTIVE_HIGH)>;

        sensitivity = "4x";
        sleep;
        no-taps;
    };
};

/ {
    glidepoint_listener {
        compatible = "zmk,input-listener";
        device = <&glidepoint>;
    };
};